<?xml version="1.0"?>
<!-- Application: Evergreen Staff Client -->
<!-- Screen: Patron Display -->

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- STYLESHEETS -->
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/global.css" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/cat.css" type="text/css"?>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- LOCALIZATION -->
<!DOCTYPE window PUBLIC "" ""[
    <!--#include virtual="/opac/locale/${locale}/lang.dtd"-->
]>

<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
<!-- OVERLAYS -->
<?xul-overlay href="/xul/server/OpenILS/util_overlay.xul"?>

<window id="record_buckets_win" title="&staff.cat.record_buckets_quick.add_to_bucket.title;"
    onload="try { my_init(); font_helper(); persist_helper(); } catch(E) { alert(E); }" oils_persist="height width"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

    <!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
    <!-- BEHAVIOR -->
    <script type="text/javascript">var myPackageDir = 'open_ils_staff_client'; var IAMXUL = true; var g = {};</script>
    <scripts id="openils_util_scripts"/>

    <script type="text/javascript" src="/xul/server/main/JSAN.js"/>
    <script>
    <![CDATA[
        function $(id) { return document.getElementById(id); }
        function $c(n) { return document.createElement(n); }

        function my_init() {
            try {
                        if (typeof JSAN == 'undefined') { throw( $("commonStrings").getString('common.jsan.missing') ); }
                JSAN.errorLevel = "die"; // none, warn, or die
                JSAN.addRepository('/xul/server/');
                JSAN.use('util.error'); g.error = new util.error();
                g.error.sdump('D_TRACE','my_init() for cat/record_buckets_quick.xul');
                JSAN.use('util.network'); g.network = new util.network();
                JSAN.use('OpenILS.data'); g.data = new OpenILS.data(); g.data.init({'via':'stash'});

                g.record_ids = xul_param(
                    'record_ids',{
                        'concat' : true,
                        'JSON2js_if_cgi' : true,
                        'JSON2js_if_xpcom' : true,
                        'stash_name':'rb_temp_record_ids',
                        'clear_xpcom' : true
                    }
                );

                $('desc').appendChild( document.createTextNode( 
                    (g.record_ids.length == 1 ?
                        $("catStrings").getString('staff.cat.record_buckets_quick.copy_one_record') :
                        $("catStrings").getFormattedString('staff.cat.record_buckets_quick.copy_multiple_records', [g.record_ids.length])) 
                ) );
                var robj = g.network.simple_request('BUCKET_RETRIEVE_VIA_USER',[ ses(), g.data.list.au[0].id() ]);
                if (typeof robj.ilsevent != 'undefined') throw(robj);

                for (var i = 0; i < robj.biblio.length; i++) {
                    if (robj.biblio[i].btype() != 'staff_client') continue;
                    var listitem = $c('listitem');
                    listitem.setAttribute('label', robj.biblio[i].name());
                    listitem.setAttribute('id', robj.biblio[i].id());
                    $('bucket_list').appendChild(listitem);
                }
                try { $('bucket_list').selectedIndex = 0; } catch(E) { }
                $('bucket_list').focus();

            } catch(E) {
                try { 
                    g.error.standard_unexpected_error_alert($("catStrings").getString('staff.cat.record_buckets_quick.initing_record_buckets_quick_xul'), E);
                } catch(F) { 
                    alert(E); 
                }
            }
        }

        g.new_bucket = function() {
            try {
                var name = prompt($("catStrings").getString('staff.cat.record_buckets_quick.name_of_bucket'),
                    '',
                    $("catStrings").getString('staff.cat.record_buckets_quick.name_of_bucket.title'));
                if (name) {
                    var bucket = new cbreb();
                    bucket.btype('staff_client');
                    bucket.owner( g.data.list.au[0].id() );
                    bucket.name( name );

                    var bucket_id = g.network.simple_request('BUCKET_CREATE',[ses(),'biblio',bucket]);
                    if (typeof bucket_id == 'object') throw bucket_id;

                    g.add_to_bucket(bucket_id);
                }
            } catch(E) {
                g.error.standard_unexpected_error_alert($("catStrings").getString('staff.cat.record_buckets_quick.bucket_creation_failure'),E);
            }
        }

        g.add_to_bucket = function(b) {
            var bucket_id;
            if (b) {
                bucket_id = b;
            } else {
                try {
                    if ($('bucket_list').selectedItem) bucket_id = $('bucket_list').selectedItem.getAttribute('id');
                } catch(E) {
                }
            }
            if (!bucket_id) return;
            for (var i = 0; i < g.record_ids.length; i++) {
                var bucket_item = new cbrebi();
                bucket_item.isnew('1');
                bucket_item.bucket(bucket_id);
                bucket_item.target_biblio_record_entry( g.record_ids[i] );
                try {
                    var robj = g.network.simple_request('BUCKET_ITEM_CREATE', [ ses(), 'biblio', bucket_item ]);
                    if (typeof robj == 'object') throw robj;

                } catch(E) {
                    g.error.standard_unexpected_error_alert($("catStrings").getFormattedString('staff.cat.record_buckets_quick.add_to_bucket.addition_failed', [bucket_id, g.record_ids[i]]), E);
                }
            }
            window.close();
        }

        g.advanced = function() {
            JSAN.use('util.window'); var win = new util.window();
            g.data.rb_temp_record_ids = js2JSON( g.record_ids ); g.data.stash('rb_temp_record_ids');
            win.open(urls.XUL_RECORD_BUCKETS,'adv_record_buckets','chrome,resizable,modal');
            window.close();
        }

    ]]>
    </script>
    
    <messagecatalog id="catStrings" src="/xul/server/locale/<!--#echo var='locale'-->/cat.properties" />
    <messagecatalog id="circStrings" src="/xul/server/locale/<!--#echo var='locale'-->/circ.properties" />

    <vbox flex="1" style="overflow: auto">
    <groupbox flex="1">
        <caption label="&staff.cat.record_buckets_quick.groupbox.caption;"/>
        <description id="desc"/>
        <listbox id="bucket_list" rows="5" flex="1" style="overflow: auto"/>
        <hbox>
            <button label="&staff.cat.record_buckets_quick.add_to_bucket.label;"
                accesskey="&staff.cat.record_buckets_quick.add_to_bucket.accesskey;" oncommand="g.add_to_bucket()"/>
            <button label="&staff.cat.record_buckets_quick.new_bucket.label;"
                accesskey="&staff.cat.record_buckets_quick.new_bucket.accesskey;" oncommand="g.new_bucket()"/>
        </hbox>
        <hbox>
            <!--
            <button label="Advanced" accesskey="v" oncommand="g.advanced()"/>
            -->
            <button label="&staff.cat.record_buckets_quick.cancel.label;"
                accesskey="&staff.cat.record_buckets_quick.cancel.accesskey;" oncommand="window.close()"/>
        </hbox>
    </groupbox>
    </vbox>

</window>

