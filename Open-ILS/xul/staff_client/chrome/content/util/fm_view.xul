<?xml version="1.0"?>
<!-- Application: Evergreen Staff Client -->
<!-- Screen: About -->

<!-- Stylesheets -->
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="/xul/server/skin/global.css" type="text/css"?>

<!-- OVERLAYS -->
<?xul-overlay href="/xul/server/OpenILS/util_overlay.xul"?>

<window id="fm_view_win" 
    onload="try { my_init(); font_helper(); } catch(E) { dump(E+'\n'); alert(E); }"
    xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

    <script type="text/javascript">var myPackageDir = 'open_ils_staff_client'; var IAMXUL = true; var g = {};</script>
    <scripts id="openils_util_scripts"/>

    <script type="text/javascript" src="/xul/server/main/JSAN.js"/>

    <script type="text/javascript">
    <![CDATA[
        var tree;
        var mw = {
            'get_list_from_tree_selection' : function() {
                var d = document; var tree_w;
                if (arguments.length == 1) {
                    tree_w = arguments[0];
                } else {
                    d = arguments[0];
                    tree_w = arguments[1];
                }
                var hitlist;
                if (typeof(tree_w) != 'object') {
                    hitlist = d.getElementById(tree_w);
                } else {
                    hitlist = tree_w;
                }
                var list = [];
                var start = new Object();
                var end = new Object();
                var numRanges = hitlist.view.selection.getRangeCount();
                for (var t=0; t<numRanges; t++){
                    hitlist.view.selection.getRangeAt(t,start,end);
                    for (var v=start.value; v<=end.value; v++){
                        var i = hitlist.contentView.getItemAtIndex(v);
                        list.push( i );
                    }
                }
                return list;
            }
        };

        function my_init() {
            try {
                        if (typeof JSAN == 'undefined') { throw( "The JSAN library object is missing."); }
                JSAN.errorLevel = "die"; // none, warn, or die
                JSAN.addRepository('/xul/server/');
                JSAN.use('util.error'); g.error = new util.error();
                JSAN.use('util.network'); g.network = new util.network();
                JSAN.use('util.window'); g.window = new util.window();
                JSAN.use('util.functional');
                g.error.sdump('D_TRACE','my_init() for fm_view.xul');

                var treechildren = window.document.getElementById('tc');
                var fm = g.network.request('open-ils.actor','opensrf.open-ils.system.fieldmapper',[]);
                var fma = []; var fmh = {} ; 
                for (var i in fm) { fmh[ fm[i].hint ] = fm[i]; fma.push( [ fm[i].hint, i ] ); }
                fma.sort();
                for (var i = 0; i < fma.length; i++) {
                    var hint = fma[i][0]; var name = fma[i][1]; var o = fmh[ hint ];
                    var ti = window.document.createElement('treeitem');
                    treechildren.appendChild( ti );
                    ti.setAttribute( 'container', 'true' );
                    var tr = window.document.createElement('treerow');
                    ti.appendChild( tr );
                    var tc = window.document.createElement('treecell');
                    tr.appendChild( tc );
                    tc.setAttribute('label',hint);
                    tc = window.document.createElement('treecell');
                    tr.appendChild( tc );
                    tc.setAttribute('label', name );
                    var _treechildren = window.document.createElement( 'treechildren' );
                    ti.appendChild( _treechildren );
                    for (var j in o.fields) {
                        var _ti = window.document.createElement( 'treeitem' );
                        _treechildren.appendChild( _ti );
                        _ti.setAttribute('fm_class',hint);
                        _ti.setAttribute('fm_field',j);
                        _ti.setAttribute('fm_virtual',o.fields[j].virtual);
                        _ti.setAttribute('fm_position',o.fields[j].position);
                        var _tr = window.document.createElement( 'treerow' );
                        _ti.appendChild( _tr );
                        var _tc = window.document.createElement( 'treecell' );
                        _tr.appendChild( _tc );
                        _tc.setAttribute('label',j);
                        _tc = window.document.createElement( 'treecell' );
                        _tr.appendChild( _tc );
                        _tc.setAttribute('label','\t         Position: ' + o.fields[j].position + '  Virtual: ' + o.fields[j].virtual);
                    }
                }
                tree = window.document.getElementById('t');
                tree.view.selection.select( 0 ); tree.focus();
            } catch(E) {
            }
        }

        function gen_cols() {
            var data_url = 'data:application/vnd.mozilla.xul+xml,<?xml version="1.0"?><window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"><?xml-stylesheet href="chrome://global/skin" type="text/css"?><vbox flex="1"><textbox id="desc" multiline="true" flex="1"/></vbox></window>';
            var w = g.window.SafeWindowOpen(data_url,'paged_tree cols','chrome,resizable,width=800,height=600');
            var css = '<?xml-stylesheet href="data:text/css,#a{-moz-box-flex:1;}"?>';
            var treeitems = mw.get_list_from_tree_selection( tree );
            setTimeout(
                function() {
                    var tb = w.document.getElementById('desc');
                    for (var i = 0; i < treeitems.length; i++) {
                        var hint = treeitems[i].getAttribute('fm_class');
                        var field = treeitems[i].getAttribute('fm_field');
                        var text = (
                            "{\n\t'id' : '" + field + "', 'label' : getString('" + hint + "_" + 
                            field + "_label'), 'flex' : 1,\n" + 
                            "\t'primary' : false, 'hidden' : false, 'fm_class' : '" + hint + 
                            "', 'fm_field_render' : '." + field + "()'\n},\n"
                        );
                        tb.value += text;
                    }
                    dump(tb.value + '\n');
                }, 0
            );
        }

        function gen_properties() {
            var data_url = 'data:application/vnd.mozilla.xul+xml,<?xml version="1.0"?><window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"><?xml-stylesheet href="chrome://global/skin" type="text/css"?><vbox flex="1"><textbox id="desc" multiline="true" flex="1"/></vbox></window>';
            var w = g.window.SafeWindowOpen(data_url,'paged_tree cols','chrome,resizable,width=800,height=600');
            var css = '<?xml-stylesheet href="data:text/css,#a{-moz-box-flex:1;}"?>';
            var treeitems = mw.get_list_from_tree_selection( tree );
            setTimeout(
                function() {
                    var tb = w.document.getElementById('desc');
                    for (var i = 0; i < treeitems.length; i++) {
                        var hint = treeitems[i].getAttribute('fm_class');
                        var field = treeitems[i].getAttribute('fm_field');
                        var pretty = util.functional.map_list(
                            field.split('_'),
                            function (s) {
                                return s.substr(0,1).toUpperCase() + s.substr(1);
                            }
                        ).join(' ');
                        var text = (
                            hint + '_' + field + '_label=' + pretty + '\n'
                        );
                        tb.value += text;
                    }
                    dump(tb.value + '\n');
                }, 0
            );
        }

        function gen_wikitable() {
            var data_url = 'data:application/vnd.mozilla.xul+xml,<?xml version="1.0"?><window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"><?xml-stylesheet href="chrome://global/skin" type="text/css"?><vbox flex="1"><textbox id="desc" multiline="true" flex="1"/></vbox></window>';
            var w = g.window.SafeWindowOpen(data_url,'paged_tree cols','chrome,resizable,width=800,height=600');
            var css = '<?xml-stylesheet href="data:text/css,#a{-moz-box-flex:1;}"?>';
            var treeitems = mw.get_list_from_tree_selection( tree );
            setTimeout(
                function() {
                    var tb = w.document.getElementById('desc');
                    for (var i = 0; i < treeitems.length; i++) {
                        var hint = treeitems[i].getAttribute('fm_class');
                        var field = treeitems[i].getAttribute('fm_field');
                        var text = (
                            '|' + hint + '|' + field
                        );
                    
                        if (treeitems[i].getAttribute('fm_virtual') == '1') text += ' * ';
                        text +=    '|\n'
                        tb.value += text;
                    }
                    dump(tb.value + '\n');
                }, 0
            );
        }


    ]]>
    </script>

    <vbox flex="1" class="my_overflow">
        <groupbox orient="vertical" flex="1">
            <caption label="Fieldmapper Class Viewer"/>
            <hbox>
                <button label="Generate paged_tree cols for selected fields" accesskey="G" oncommand="gen_cols();"/>
                <button label="Generate string bundle properties for selected fields" accesskey="P" oncommand="gen_properties();"/>
                <button label="Generate dokuwiki table for selected fields" accesskey="P" oncommand="gen_wikitable();"/>
            </hbox>
            <tree id="t" flex="1">
                <treecols>
                    <treecol id="tcol1" label="opensrf.open-ils.system.fieldmapper" primary="true" flex="0"/>
                    <treecol id="tcol2" label="" flex="1"/>
                </treecols>
                <treechildren id="tc"/>
            </tree>
        </groupbox>
    </vbox>

</window>

